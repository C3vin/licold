public class _62_Unique_Paths {

    public static void main(String[] args) {

        int m = 4;
        int n = 7;

        System.out.println(UniquePaths_1(m,n));
        System.out.println(UniquePaths_2(m,n));
        System.out.println(UniquePaths_3(m,n));


    }


    /** DP  O(n*m) O(n*m) **/
    public static int UniquePaths_1(int m, int n) {

        int[][] res = new int[m][n];

        for (int i = 0; i < m; i++) res[i][0] = 1;

        for (int i = 1; i < n; i++) res[0][i] = 1;

        for (int i = 1; i < m; i++) {
            for (int j = 1; j < n; j++) {
                res[i][j] = res[i - 1][j] + res[i][j - 1];
            }
        }

        return res[m - 1][n - 1];
    }

    /** DP  O(n*m) O(n) **/
    public static int UniquePaths_2(int m, int n) {
        int[] res = new int[n];
        res[0] = 1;
        for(int i=0; i<m; i++) {
            for(int j=1; j<n; j++){
                res[j] = res[j] + res[j-1];
            }
        }
        return res[n-1];
    }

    public static int UniquePaths_3(int m, int n) {
        int[] res = new int[n];
        res[0] = 1;
        for (int i=0; i<m;i++){
            for(int j=1; j<n; j++){
                res[j] = res[j] + res[j-1];
            }
        }
        return res[n-1];
    }
}
