class Solution {
 
    public boolean checkSubarraySum(int[] nums, int k) {
        
        if (nums.length < 2) return false;
         
        Map<Integer, Integer> map = new HashMap<>();
 
        map.put(0, -1);
        
        int curMod = 0;
        int totalSum = 0;
        
        for (int i = 0; i < nums.length; i++) {
            
            totalSum += nums[i];

            if (k != 0) { // corner case: k CANNOT be 0 when we use a number mod k
                curMod = totalSum % k;
            } else {
                curMod = totalSum;
            }
            
            if (map.containsKey(curMod)) {
                if (i - map.get(curMod) >= 2)   return true;
            }
            else {
                map.put(curMod, i);
            }
        }
        
        return false;
    }
}