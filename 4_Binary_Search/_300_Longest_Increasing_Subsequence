////////////////////////////////////////   DP
class Solution {
  
        public int lengthOfLIS(int[] nums) {

            int[] dp = new int[nums.length];
            
            int len = 0;
            
            for (int x : nums) {

                int index = Arrays.binarySearch(dp, 0, len, x);
                
                if (index < 0) index = -(index + 1);
                
                dp[index] = x;
                
                if (index == len) len++;    
            }
            return len;
        }
}
 
////////////////////////////////////////   Binary Search
class Solution {
  
        public int lengthOfLIS(int[] nums) {
            
            int[] tails = new int[nums.length];
            int size = 0;
            for (int x : nums) {
                int i = 0, j = size;
                while (i != j) {
                    int m = (i + j) / 2;
                    if (tails[m] < x)
                        i = m + 1;
                    else
                        j = m;
                }
                tails[i] = x;
                if (i == size) ++size;
            }
            return size;
            
        }
}

