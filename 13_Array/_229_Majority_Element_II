public class Solution {
    
   /**Moore Voting algorithm 
   
     Question's meaning: https://www.youtube.com/watch?v=fTrgKqyiazA&t=201s  
   
     如果两个都超过1/3, 说明，最多只有2个major存在。自己想想为什么
     
     然后，有三种个情况，
     
     1. 一个答案都找不到，都没有超过1/3，那么最后一步检核，两个num_1和num_2都无法出局
     2. 找到两个答案，也就是说，input是由， AAAAAAAA BBBBBBBBB CCC 组成，也就是说，CCC无法湮灭A或者B，自然A和B出局 
     3. 找到一个答案，也就是说，input是由， AAAAAAAA BCDEFGHIJKLMNOPQ, 也就是说，A会出局，但另一个字母会暂时出局，但最终会被最后的检核（是否大于1/3）歼灭
     
   */ 
     
   public List<Integer> majorityElement(int[] nums) {
       
       List<Integer> res = new ArrayList<>(); 
       
       if(nums.length == 0) return res; 
    
       int num_1 = nums[0];
       int num_2 = nums[0]; 
       int count_1 = 0; 
       int count_2 = 0;
    
       // 跑一遍
       for(int val:nums){
           
           if(val == num_1) count_1++; 
           
           else if(val == num_2) count_2++;
           
           else if(count_1 == 0) {
               num_1 = val; 
               count_1 ++; 
           }
           else if(count_2 == 0) {
               num_2 = val; 
               count_2++; 
           }
           else {
               count_1--;
               count_2--; 
           }
       }
       
       // 归零 
       count_1 = 0; 
       count_2 = 0; 
       
       for(int val : nums) {
           if(val == num_1) count_1++; 
           else if(val == num_2) count_2++; 
       }
       
       if(count_1 > nums.length/3) res.add(num_1); 
       if(count_2 > nums.length/3) res.add(num_2); 
       
       return res; 
   }
}