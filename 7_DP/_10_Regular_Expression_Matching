 /** 印度老哥的辦法 
 
     Tushar Roy  https://www.youtube.com/watch?v=l3hda49XcDE    ( 這 個 視 頻 很 重 要 ！ )
     
 **/

class Solution {

        int k = 0;

        public boolean isMatch(String a, String b) {

            char[] text = a.toCharArray();
            char[] pattern = b.toCharArray();

            boolean T[][] = new boolean[text.length + 1][pattern.length + 1];

            T[0][0] = true;

            /** 處理*號的問題  -->  填充第一行 **/
            for (int i = 1; i < T[0].length; i++) {
                if (pattern[i - 1] == '*') {
                    T[0][i] = T[0][i - 2];
                }
            }

            /**
             *          pattern       a     *    b . * y
             *   比如初始的T[0]是      1     0     0 0 0 0
             *     處理后的T[0]是      1     0    1 0 0 0
             * **/


            for (int i = 1; i < T.length; i++) {             /** 行的循環 - TEXT **/
                for (int j = 1; j < T[0].length; j++) {      /** 列的循環 - Pattern **/

                    if (pattern[j - 1] == '.' || pattern[j - 1] == text[i - 1]) {  /** 注意：這裡的 pattern 的位置，和 T[][] 的位置，有1個位置差別 **/
                        T[i][j] = T[i - 1][j - 1];                                 /** 斜對角相等 **/

                    } else if (pattern[j - 1] == '*') {  /** 如果是*號，檢查兩個地方，任何一個地方正確都行 **/

                        T[i][j] = T[i][j - 2];

                        if (pattern[j - 2] == '.' || pattern[j - 2] == text[i - 1]) {  /** 當前位置的，前一個正則字符如果跟，當前的text字符相等 --> 看垂直上一個位置的dp **/

                            T[i][j] = T[i][j] || T[i - 1][j];

                        }

                    } else {
                        T[i][j] = false;
                    }

                }
            }
            return T[text.length][pattern.length];
   }
}
